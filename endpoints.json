{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "POST /api/topics": {
    "description": "adds a new topic",
    "requestBody": {
      "slug": "string",
      "description": "string"
    },
    "exampleResponse": {
      "topic": {
        "slug": "new-topic",
        "description": "A new topic for testing"
      }
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": ["author", "topic", "sort_by", "order", "limit", "p"],
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "article_img_url": "https://example.com/image.jpg",
          "comment_count": "6"
        }
      ],
      "total_count": 12
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an object with the chosen id",
    "exampleResponse": {
      "article_id": 1,
      "title": "Running a Node App",
      "topic": "coding",
      "author": "jessjelly",
      "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
      "created_at": 1604728980000,
      "votes": 0,
      "article_img_url": "https://example.com/image.jpg",
      "comment_count": "11"
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of comments for the specified article",
    "queries": ["limit", "p"],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": 5,
          "votes": 0,
          "created_at": "2020-11-03T21:00:00.000Z",
          "author": "icellusedkars",
          "body": "I hate streaming noses",
          "article_id": 1
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "adds a comment to a specific article id",
    "exampleResponse": [
      {
        "comment_id": 19,
        "body": "comment",
        "article_id": 1,
        "author": "butter_bridge",
        "votes": 0,
        "created_at": "2024-07-15T15:46:28.056Z"
      }
    ]
  },
  "DELETE /api/articles/:article_id/comments": {
    "description": "deletes all comments for a specific article id and returns no content",
    "exampleResponse": {}
  },
  "PATCH /api/articles/:article_id": {
    "description": "updates the vote count for the chosen article and returns the new article object",
    "exampleResponse": {
      "article_id": 1,
      "title": "Running a Node App",
      "topic": "coding",
      "author": "jessjelly",
      "body": "This is part two of a series on how to get up and running with Systemd and Node.js. This part dives deeper into how to successfully run your app with systemd long-term, and how to set it up in a production environment.",
      "created_at": 1604728980000,
      "votes": 1,
      "article_img_url": "https://example.com/image.jpg"
    }
  },
  "DELETE /api/articles/:article_id": {
    "description": "deletes the specified article and its associated comments, returns no content",
    "exampleResponse": {}
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes the specified comment and returns no content",
    "exampleResponse": {}
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "tickle122",
          "name": "Tom Tickle",
          "avatar_url": "https://example.com/avatar.jpg"
        }
      ]
    }
  },
  "GET /api/users/:username": {
    "description": "serves an object of the user with the specified username",
    "exampleResponse": {
      "user": {
        "username": "tickle122",
        "name": "Tom Tickle",
        "avatar_url": "https://example.com/avatar.jpg"
      }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "updates the vote count for the specified comment and returns the updated comment object",
    "exampleResponse": {
      "comment_id": 5,
      "votes": 1,
      "created_at": "2020-11-03T21:00:00.000Z",
      "author": "icellusedkars",
      "body": "I hate streaming noses",
      "article_id": 1
    }
  },
  "POST /api/articles": {
    "description": "adds a new article",
    "requestBody": {
      "author": "string",
      "title": "string",
      "body": "string",
      "topic": "string",
      "article_img_url": "string (optional)"
    },
    "exampleResponse": {
      "article_id": 6,
      "author": "butter_bridge",
      "title": "new article",
      "body": "This is a new article.",
      "topic": "coding",
      "article_img_url": "https://example.com/image.jpg",
      "votes": 0,
      "created_at": "2024-07-15T15:46:28.056Z",
      "comment_count": "0"
    }
  }
}
